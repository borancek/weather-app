{"ast":null,"code":"var _jsxFileName = \"/Users/borancek/Desktop/GUI Submission 2/src/App.js\",\n    _s = $RefreshSig$();\n\n// all original code from us is in App.js, App.css and settingsPage.js, please ignore all other files as they came with the dev install of node js.\nimport logo from './logo.svg';\nimport React, { Fragment, PureComponent, useEffect, useState } from 'react';\nimport './App.css';\nimport './settingsPage';\nimport { geolocated } from \"react-geolocated\";\nimport { render } from '@testing-library/react'; //weatherapi key and base url\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"b6f8640e564f49fb917104400222403\",\n  base: \"http://api.weatherapi.com/v1\"\n};\n\nfunction App() {\n  _s();\n\n  // variables to store current location and functions to later reset values\n  // Will default to Paris if it cannot find current location\n  const [lat, setLat] = useState('51.50');\n  const [lon, setLon] = useState('0.12');\n\n  const getLocation = () => {\n    if (!navigator.geolocation) {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: \"Geo location not supported by browser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this);\n    } else {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(position.coords.latitude, position.coords.longitude);\n        setLat('' + position.coords.latitude);\n        setLon('' + position.coords.longitude);\n      }, () => {\n        console.log(\"Unable to retrieve location\");\n      });\n    }\n  }; // variables to store weather data, and the functions to then later reset values\n\n\n  const [weather, setWeather] = useState({});\n  const [hourly, setHourly] = useState([]); // stops the api from constantly retrieving data and reduces cpu load\n\n  useEffect(() => {\n    getLocation();\n  }, []);\n  useEffect(() => {\n    fetchWeather();\n  }, [lat, lon]); // fetches api data and using setWeather function to store various bits of data into different names within the weather variable.\n\n  const fetchWeather = () => {\n    const res = fetch(`${api.base}/forecast.json?key=${api.key}&q=${lat}, ${lon}&days=1&alerts=no`).then(res => {\n      const result = res.json().then(result => {\n        var _result$location, _result$location2, _result$location3, _result$location4, _result$location5, _result$current, _result$current2, _result$current3, _result$current4, _result$current5, _result$current6, _result$current7, _result$current8, _result$forecast, _result$forecast2, _result$current9, _result$location6, _result$forecast3;\n\n        setWeather({\n          name: (_result$location = result.location) === null || _result$location === void 0 ? void 0 : _result$location.name,\n          region: (_result$location2 = result.location) === null || _result$location2 === void 0 ? void 0 : _result$location2.region,\n          country: (_result$location3 = result.location) === null || _result$location3 === void 0 ? void 0 : _result$location3.country,\n          uLat: (_result$location4 = result.location) === null || _result$location4 === void 0 ? void 0 : _result$location4.lat,\n          uLon: (_result$location5 = result.location) === null || _result$location5 === void 0 ? void 0 : _result$location5.lon,\n          tempC: (_result$current = result.current) === null || _result$current === void 0 ? void 0 : _result$current.temp_c,\n          tempF: (_result$current2 = result.current) === null || _result$current2 === void 0 ? void 0 : _result$current2.temp_f,\n          condition: (_result$current3 = result.current) === null || _result$current3 === void 0 ? void 0 : _result$current3.condition.text,\n          wind: (_result$current4 = result.current) === null || _result$current4 === void 0 ? void 0 : _result$current4.wind_mph,\n          humidity: (_result$current5 = result.current) === null || _result$current5 === void 0 ? void 0 : _result$current5.humidity,\n          precip: (_result$current6 = result.current) === null || _result$current6 === void 0 ? void 0 : _result$current6.precip_mm,\n          vis: (_result$current7 = result.current) === null || _result$current7 === void 0 ? void 0 : _result$current7.vis_miles,\n          uv: (_result$current8 = result.current) === null || _result$current8 === void 0 ? void 0 : _result$current8.uv,\n          rainChance: (_result$forecast = result.forecast) === null || _result$forecast === void 0 ? void 0 : _result$forecast.forecastday[0].day.daily_chance_of_rain,\n          snowChance: (_result$forecast2 = result.forecast) === null || _result$forecast2 === void 0 ? void 0 : _result$forecast2.forecastday[0].day.daily_chance_of_snow,\n          windDir: (_result$current9 = result.current) === null || _result$current9 === void 0 ? void 0 : _result$current9.wind_dir,\n          currentT: (_result$location6 = result.location) === null || _result$location6 === void 0 ? void 0 : _result$location6.localtime\n        });\n        setHourly((_result$forecast3 = result.forecast) === null || _result$forecast3 === void 0 ? void 0 : _result$forecast3.forecastday[0].hour);\n      });\n    });\n  }; // var to use later to store array of hourly time\n\n\n  let hourTime = [];\n  return (\n    /*#__PURE__*/\n    // imagines and text for appearance of home screen\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./pics/greenSETTINGS.png'),\n          className: \"settings-icon\",\n          height: 50,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./pics/location.png'),\n          className: \"location-icon\",\n          height: 50,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./pics/whiteCloud.png'),\n          className: \"cloud-icon\",\n          height: 50,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./pics/greenRect.png'),\n          className: \"current-weather-background\",\n          height: 200,\n          width: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./pics/greenRect.png'),\n          className: \"current-weather-background2\",\n          height: 200,\n          width: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./pics/greenRect.png'),\n          className: \"current-weather-background3\",\n          height: 200,\n          width: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./pics/greenRect.png'),\n          className: \"current-weather-background4\",\n          height: 200,\n          width: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./pics/greenRect.png'),\n          className: \"current-weather-background5\",\n          height: 200,\n          width: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./pics/greenRect.png'),\n          className: \"current-weather-background6\",\n          height: 350,\n          width: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./pics/greenRect.png'),\n          className: \"current-weather-background7\",\n          height: 200,\n          width: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./pics/greenRect.png'),\n          className: \"current-weather-background8\",\n          height: 300,\n          width: 352\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./pics/greenRect.png'),\n          className: \"current-weather-background9\",\n          height: 200,\n          width: 225\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./pics/greenRect.png'),\n          className: \"current-weather-background10\",\n          height: 200,\n          width: 225\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./pics/greenRect.png'),\n          className: \"current-weather-background11\",\n          height: 200,\n          width: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"location-text\",\n          children: weather.region\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tempValue\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"location-temp-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: weather.tempC\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 46\n            }, this), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Hourly-Scroller\",\n          children: hourly.map(hour => (hourTime = hour.time.split(\" \"), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hourInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"time\",\n              children: hourTime[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"hour\",\n              children: [hour.temp_c, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todays-forecast\",\n          children: \"TODAY'S FORECAST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"uv-index\",\n          children: \" UV INDEX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"uv-stat\",\n          children: weather.uv\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"visibility-text\",\n          children: \" VISIBILITY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"vis-stat\",\n          children: [weather.vis, \" miles\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"line4\",\n          children: \"-------------------------------------------\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"wind-text\",\n          children: \" WIND\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"wind-stat\",\n          children: [weather.wind, \" mph\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"humidity-text\",\n          children: \"WIND DIRECTION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"humidity-stat\",\n          children: weather.windDir\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"line5\",\n          children: \"-------------------------------------------\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cof-text\",\n          children: \" HUMIDITY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cof-stat\",\n          children: [weather.humidity, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"percipitation-text\",\n          children: \"PERCIPITATION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"percipitation-stat\",\n          children: [weather.precip, \" mm\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"line6\",\n          children: \"-------------------------------------------\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cot-text\",\n          children: \" CHANCE OF RAIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cot-stat\",\n          children: [weather.rainChance, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"flood-depth-text\",\n          children: \" CHANCE OF SNOW\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"flood-depth-stat\",\n          children: [weather.snowChance, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"App-link\",\n          href: \"https://www.rhs.org.uk/advice/grow-your-own/in-month/march\",\n          children: \"more...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"xM1EumcM9ak4jqSh7jN4NXSocPQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/borancek/Desktop/GUI Submission 2/src/App.js"],"names":["logo","React","Fragment","PureComponent","useEffect","useState","geolocated","render","api","key","base","App","lat","setLat","lon","setLon","getLocation","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude","weather","setWeather","hourly","setHourly","fetchWeather","res","fetch","then","result","json","name","location","region","country","uLat","uLon","tempC","current","temp_c","tempF","temp_f","condition","text","wind","wind_mph","humidity","precip","precip_mm","vis","vis_miles","uv","rainChance","forecast","forecastday","day","daily_chance_of_rain","snowChance","daily_chance_of_snow","windDir","wind_dir","currentT","localtime","hour","hourTime","require","map","time","split"],"mappings":"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","sourcesContent":["// all original code from us is in App.js, App.css and settingsPage.js, please ignore all other files as they came with the dev install of node js.\nimport logo from './logo.svg';\nimport React, { Fragment, PureComponent, useEffect, useState }from 'react';\nimport './App.css';\nimport './settingsPage';\nimport { geolocated } from \"react-geolocated\";\nimport { render } from '@testing-library/react';\n\n//weatherapi key and base url\nconst api = {\n  key: \"b6f8640e564f49fb917104400222403\",\n  base: \"http://api.weatherapi.com/v1\"\n}\n\nfunction App() {\n  // variables to store current location and functions to later reset values\n  // Will default to Paris if it cannot find current location\n  const [lat, setLat] = useState('51.50');\n  const [lon, setLon] = useState('0.12');\n\n  const getLocation = () => {\n    if (!navigator.geolocation) {\n      <div>Geo location not supported by browser</div>;\n    } else {\n      navigator.geolocation.getCurrentPosition((position) => {\n        console.log(position.coords.latitude, position.coords.longitude)\n        setLat(''+position.coords.latitude);\n        setLon(''+position.coords.longitude);\n      }, () => {\n        console.log(\"Unable to retrieve location\")\n      });\n    }\n  }\n  // variables to store weather data, and the functions to then later reset values\n  const [weather, setWeather] = useState({});\n  const [hourly, setHourly] = useState([]);\n  // stops the api from constantly retrieving data and reduces cpu load\n  useEffect(()=>{\n    getLocation();\n  }, []);\n\n  useEffect(()=>{\n    fetchWeather();\n  },[lat, lon])\n\n  // fetches api data and using setWeather function to store various bits of data into different names within the weather variable.\n  const fetchWeather = () =>{\n    const res = fetch(`${api.base}/forecast.json?key=${api.key}&q=${lat}, ${lon}&days=1&alerts=no`).then((res) => { \n      const result = res.json().then((result) => {\n        setWeather({\n          name: result.location?.name,\n          region: result.location?.region,\n          country: result.location?.country,\n          uLat: result.location?.lat,\n          uLon: result.location?.lon,\n          tempC: result.current?.temp_c,\n          tempF: result.current?.temp_f,\n          condition: result.current?.condition.text,\n          wind: result.current?.wind_mph,\n          humidity: result.current?.humidity,\n          precip: result.current?.precip_mm,\n          vis: result.current?.vis_miles,\n          uv: result.current?.uv,\n          rainChance: result.forecast?.forecastday[0].day.daily_chance_of_rain,\n          snowChance: result.forecast?.forecastday[0].day.daily_chance_of_snow,\n          windDir: result.current?.wind_dir,\n          currentT: result.location?.localtime,\n        });\n        setHourly(result.forecast?.forecastday[0].hour)\n      })\n    })\n  };\n  // var to use later to store array of hourly time\n  let hourTime = [];\n\n  return (\n    // imagines and text for appearance of home screen\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n        <img src={require('./pics/greenSETTINGS.png')} className=\"settings-icon\" height={50} width={50}  />\n        <img src={require('./pics/location.png')} className=\"location-icon\" height={50} width={50}  />\n        <img src={require('./pics/whiteCloud.png')} className=\"cloud-icon\" height={50} width={50}  />\n        <img src={require('./pics/greenRect.png')} className=\"current-weather-background\" height={200} width={200}  />\n        <img src={require('./pics/greenRect.png')} className=\"current-weather-background2\" height={200} width={200}  />\n        <img src={require('./pics/greenRect.png')} className=\"current-weather-background3\" height={200} width={200}  />\n\n        <img src={require('./pics/greenRect.png')} className=\"current-weather-background4\" height={200} width={200}  />\n        <img src={require('./pics/greenRect.png')} className=\"current-weather-background5\" height={200} width={200}  />\n        <img src={require('./pics/greenRect.png')} className=\"current-weather-background6\" height={350} width={200}  />\n        <img src={require('./pics/greenRect.png')} className=\"current-weather-background7\" height={200} width={200}  />\n        <img src={require('./pics/greenRect.png')} className=\"current-weather-background8\" height={300} width={352}  />\n        <img src={require('./pics/greenRect.png')} className=\"current-weather-background9\" height={200} width={225}  />\n        <img src={require('./pics/greenRect.png')} className=\"current-weather-background10\" height={200} width={225}  />\n        <img src={require('./pics/greenRect.png')} className=\"current-weather-background11\" height={200} width={200}  />\n         \n        {/* Display api data of Location and current temp */}\n        <p className=\"location-text\" >{weather.region}</p>\n        <div className=\"tempValue\">\n          <p className=\"location-temp-text\" ><b>{weather.tempC}</b>°C</p>\n        </div>\n        \n        {/* Scroller showing the hourly temp from current time onwards, using map function and split to only show hour */}\n        <div className=\"Hourly-Scroller\">\n          {hourly.map((hour) => (\n            hourTime = hour.time.split(\" \"),\n            <div className='hourInfo'>\n            <p className=\"time\">{hourTime[1]}</p>\n            <p className=\"hour\">{hour.temp_c}°C</p>\n            </div>\n          ))}\n         \n        </div>\n        <p className=\"todays-forecast\" >TODAY'S FORECAST</p>\n        \n        {/* Lower part of home screen, including more detailed info on weather for the whole day on avg */}\n        <p className=\"uv-index\"> UV INDEX</p>\n        <p className=\"uv-stat\" >{weather.uv}</p>\n        <p className=\"visibility-text\"> VISIBILITY</p>\n        <p className=\"vis-stat\" >{weather.vis} miles</p>\n        <p className=\"line4\">-------------------------------------------</p>\n        <p className=\"wind-text\"> WIND</p>\n        <p className=\"wind-stat\" >{weather.wind} mph</p>\n        <p className=\"humidity-text\">WIND DIRECTION</p>\n        <p className=\"humidity-stat\">{weather.windDir}</p>\n        <p className=\"line5\">-------------------------------------------</p>\n        <p className=\"cof-text\"> HUMIDITY</p>\n        <p className=\"cof-stat\">{weather.humidity} %</p>\n        <p className=\"percipitation-text\">PERCIPITATION</p>\n        <p className=\"percipitation-stat\">{weather.precip} mm</p>\n        <p className=\"line6\">-------------------------------------------</p>\n        <p className=\"cot-text\"> CHANCE OF RAIN</p>\n        <p className=\"cot-stat\">{weather.rainChance} %</p>\n        <p className=\"flood-depth-text\"> CHANCE OF SNOW</p>\n        <p className=\"flood-depth-stat\">{weather.snowChance}%</p>\n        \n        <a\n          className=\"App-link\"\n          href=\"https://www.rhs.org.uk/advice/grow-your-own/in-month/march\"\n          \n        >\n          more...\n        </a>\n      </header>\n\n\n    </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}